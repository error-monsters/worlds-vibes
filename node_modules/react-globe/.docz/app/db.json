{
  "config": {
    "title": "React Globe",
    "description": "Create beautiful and interactive React + ThreeJS globe visualizations with ease.",
    "menu": [
      "README",
      {
        "name": "Props",
        "menu": [
          "Component",
          "Types"
        ]
      },
      {
        "name": "Usage",
        "menu": [
          "Globe",
          "Textures",
          "Camera",
          "Lights",
          "Focus",
          "Markers",
          "Events",
          "Animations"
        ]
      },
      {
        "name": "Gallery",
        "menu": [
          "Contributing",
          "Google Globe Trends"
        ]
      },
      "FAQ",
      "CHANGELOG",
      {
        "name": "Github",
        "href": "https://github.com/chrisrzhou/react-globe"
      }
    ],
    "version": "3.0.3",
    "repository": "https://github.com/chrisrzhou/react-globe",
    "native": false,
    "codeSandbox": true,
    "themeConfig": {
      "showPlaygroundEditor": true
    },
    "separator": "-",
    "dest": "dist/docs",
    "public": "/public",
    "typescript": true
  },
  "props": [
    {
      "key": "src/ReactGlobe.tsx",
      "value": [
        {
          "description": "",
          "displayName": "ReactGlobe",
          "methods": [],
          "props": {
            "animations": {
              "defaultValue": null,
              "description": "An array of animation steps to power globe animations.",
              "name": "animations",
              "required": false,
              "type": {
                "name": "Animation[]"
              }
            },
            "cameraOptions": {
              "defaultValue": null,
              "description": "Configure camera options (e.g. rotation, zoom, angles).",
              "name": "cameraOptions",
              "required": false,
              "type": {
                "name": "Optional<CameraOptions>"
              }
            },
            "focus": {
              "defaultValue": null,
              "description": "A set of [lat, lon] coordinates to be focused on.",
              "name": "focus",
              "required": false,
              "type": {
                "name": "[number, number]"
              }
            },
            "focusOptions": {
              "defaultValue": null,
              "description": "Configure focusing options (e.g. animation duration, distance, easing function).",
              "name": "focusOptions",
              "required": false,
              "type": {
                "name": "Optional<FocusOptions>"
              }
            },
            "globeOptions": {
              "defaultValue": null,
              "description": "Configure globe options (e.g. textures, background, clouds, glow).",
              "name": "globeOptions",
              "required": false,
              "type": {
                "name": "Optional<GlobeOptions>"
              }
            },
            "lightOptions": {
              "defaultValue": null,
              "description": "Configure light options (e.g. ambient and point light colors + intensity).",
              "name": "lightOptions",
              "required": false,
              "type": {
                "name": "Optional<LightOptions>"
              }
            },
            "lookAt": {
              "defaultValue": null,
              "description": "A set of starting [lat, lon] coordinates for the globe.",
              "name": "lookAt",
              "required": false,
              "type": {
                "name": "[number, number]"
              }
            },
            "markers": {
              "defaultValue": null,
              "description": "An array of data that will render interactive markers on the globe.",
              "name": "markers",
              "required": false,
              "type": {
                "name": "Marker[]"
              }
            },
            "markerOptions": {
              "defaultValue": null,
              "description": "Configure marker options (e.g. tooltips, size, marker types, custom marker renderer).",
              "name": "markerOptions",
              "required": false,
              "type": {
                "name": "Optional<MarkerOptions>"
              }
            },
            "onClickMarker": {
              "defaultValue": null,
              "description": "Callback to handle click events of a marker.  Captures the clicked marker, ThreeJS object and pointer event.",
              "name": "onClickMarker",
              "required": false,
              "type": {
                "name": "MarkerCallback"
              }
            },
            "onDefocus": {
              "defaultValue": null,
              "description": "Callback to handle defocus events (i.e. clicking the globe after a focus has been applied).  Captures the previously focused coordinates and pointer event.",
              "name": "onDefocus",
              "required": false,
              "type": {
                "name": "(previousFocus: [number, number], event?: PointerEvent) => void"
              }
            },
            "onMouseOutMarker": {
              "defaultValue": null,
              "description": "Callback to handle mouseout events of a marker.  Captures the previously hovered marker, ThreeJS object and pointer event.",
              "name": "onMouseOutMarker",
              "required": false,
              "type": {
                "name": "MarkerCallback"
              }
            },
            "onMouseOverMarker": {
              "defaultValue": null,
              "description": "Callback to handle mouseover events of a marker.  Captures the hovered marker, ThreeJS object and pointer event.",
              "name": "onMouseOverMarker",
              "required": false,
              "type": {
                "name": "MarkerCallback"
              }
            },
            "onTextureLoaded": {
              "defaultValue": null,
              "description": "Callback when texture is successfully loaded",
              "name": "onTextureLoaded",
              "required": false,
              "type": {
                "name": "() => void"
              }
            },
            "size": {
              "defaultValue": null,
              "description": "Set explicit [width, height] values for the canvas container.  This will disable responsive resizing.",
              "name": "size",
              "required": false,
              "type": {
                "name": "[number, number]"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/Tooltip.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Tooltip",
          "methods": [],
          "props": {
            "content": {
              "defaultValue": null,
              "description": "",
              "name": "content",
              "required": true,
              "type": {
                "name": "string"
              }
            },
            "offset": {
              "defaultValue": null,
              "description": "",
              "name": "offset",
              "required": true,
              "type": {
                "name": "number"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "",
              "name": "x",
              "required": true,
              "type": {
                "name": "number"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "",
              "name": "y",
              "required": true,
              "type": {
                "name": "number"
              }
            }
          }
        }
      ]
    },
    {
      "key": "docs/usage/ReactGlobe.tsx",
      "value": [
        {
          "description": "",
          "displayName": "ReactGlobe",
          "methods": [],
          "props": {
            "animations": {
              "defaultValue": null,
              "description": "An array of animation steps to power globe animations.",
              "name": "animations",
              "required": false,
              "type": {
                "name": "Animation[]"
              }
            },
            "cameraOptions": {
              "defaultValue": null,
              "description": "Configure camera options (e.g. rotation, zoom, angles).",
              "name": "cameraOptions",
              "required": false,
              "type": {
                "name": "Optional<CameraOptions>"
              }
            },
            "focus": {
              "defaultValue": null,
              "description": "A set of [lat, lon] coordinates to be focused on.",
              "name": "focus",
              "required": false,
              "type": {
                "name": "[number, number]"
              }
            },
            "focusOptions": {
              "defaultValue": null,
              "description": "Configure focusing options (e.g. animation duration, distance, easing function).",
              "name": "focusOptions",
              "required": false,
              "type": {
                "name": "Optional<FocusOptions>"
              }
            },
            "globeOptions": {
              "defaultValue": null,
              "description": "Configure globe options (e.g. textures, background, clouds, glow).",
              "name": "globeOptions",
              "required": false,
              "type": {
                "name": "Optional<GlobeOptions>"
              }
            },
            "lightOptions": {
              "defaultValue": null,
              "description": "Configure light options (e.g. ambient and point light colors + intensity).",
              "name": "lightOptions",
              "required": false,
              "type": {
                "name": "Optional<LightOptions>"
              }
            },
            "lookAt": {
              "defaultValue": null,
              "description": "A set of starting [lat, lon] coordinates for the globe.",
              "name": "lookAt",
              "required": false,
              "type": {
                "name": "[number, number]"
              }
            },
            "markers": {
              "defaultValue": null,
              "description": "An array of data that will render interactive markers on the globe.",
              "name": "markers",
              "required": false,
              "type": {
                "name": "Marker[]"
              }
            },
            "markerOptions": {
              "defaultValue": null,
              "description": "Configure marker options (e.g. tooltips, size, marker types, custom marker renderer).",
              "name": "markerOptions",
              "required": false,
              "type": {
                "name": "Optional<MarkerOptions>"
              }
            },
            "onClickMarker": {
              "defaultValue": null,
              "description": "Callback to handle click events of a marker.  Captures the clicked marker, ThreeJS object and pointer event.",
              "name": "onClickMarker",
              "required": false,
              "type": {
                "name": "MarkerCallback"
              }
            },
            "onDefocus": {
              "defaultValue": null,
              "description": "Callback to handle defocus events (i.e. clicking the globe after a focus has been applied).  Captures the previously focused coordinates and pointer event.",
              "name": "onDefocus",
              "required": false,
              "type": {
                "name": "(previousFocus: [number, number], event?: PointerEvent) => void"
              }
            },
            "onMouseOutMarker": {
              "defaultValue": null,
              "description": "Callback to handle mouseout events of a marker.  Captures the previously hovered marker, ThreeJS object and pointer event.",
              "name": "onMouseOutMarker",
              "required": false,
              "type": {
                "name": "MarkerCallback"
              }
            },
            "onMouseOverMarker": {
              "defaultValue": null,
              "description": "Callback to handle mouseover events of a marker.  Captures the hovered marker, ThreeJS object and pointer event.",
              "name": "onMouseOverMarker",
              "required": false,
              "type": {
                "name": "MarkerCallback"
              }
            },
            "onTextureLoaded": {
              "defaultValue": null,
              "description": "Callback when texture is successfully loaded",
              "name": "onTextureLoaded",
              "required": false,
              "type": {
                "name": "() => void"
              }
            },
            "size": {
              "defaultValue": null,
              "description": "Set explicit [width, height] values for the canvas container.  This will disable responsive resizing.",
              "name": "size",
              "required": false,
              "type": {
                "name": "[number, number]"
              }
            }
          }
        }
      ]
    },
    {
      "key": "docs/props/components/Animation.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Animation",
          "methods": [],
          "props": {
            "animationDuration": {
              "defaultValue": null,
              "description": "Duration of the animation.",
              "name": "animationDuration",
              "required": true,
              "type": {
                "name": "number"
              }
            },
            "coordinates": {
              "defaultValue": null,
              "description": "Coordinates that the globe will animate to.",
              "name": "coordinates",
              "required": true,
              "type": {
                "name": "[number, number]"
              }
            },
            "distanceRadiusScale": {
              "defaultValue": null,
              "description": "Distance (measured as a scale factor to the globe radius) that the globe will animate to.",
              "name": "distanceRadiusScale",
              "required": true,
              "type": {
                "name": "number"
              }
            },
            "easingFunction": {
              "defaultValue": null,
              "description": "Easing function applied for the animation.",
              "name": "easingFunction",
              "required": true,
              "type": {
                "name": "EasingFunction"
              }
            }
          }
        }
      ]
    },
    {
      "key": "docs/props/components/CameraOptions.tsx",
      "value": [
        {
          "description": "",
          "displayName": "CameraOptions",
          "methods": [],
          "props": {
            "autoRotateSpeed": {
              "defaultValue": null,
              "description": "Speed of auto-rotation.",
              "name": "autoRotateSpeed",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "distanceRadiusScale": {
              "defaultValue": null,
              "description": "Distance (measured as a scale factor to the globe radius) that the camera is placed.  This value should be greater than 1.",
              "name": "distanceRadiusScale",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "enableAutoRotate": {
              "defaultValue": null,
              "description": "Enable the auto-rotate feature of the globe.",
              "name": "enableAutoRotate",
              "required": false,
              "type": {
                "name": "boolean"
              }
            },
            "enableRotate": {
              "defaultValue": null,
              "description": "Enable the rotate feature of the globe.",
              "name": "enableRotate",
              "required": false,
              "type": {
                "name": "boolean"
              }
            },
            "enableZoom": {
              "defaultValue": null,
              "description": "Enable the zoom feature of the globe.",
              "name": "enableZoom",
              "required": false,
              "type": {
                "name": "boolean"
              }
            },
            "maxDistanceRadiusScale": {
              "defaultValue": null,
              "description": "Max distance (measured as a scale factor to the globe radius) that the camera is allowed to be zoomed out.  This value should be greater than the distanceRadiusScale.",
              "name": "maxDistanceRadiusScale",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "maxPolarAngle": {
              "defaultValue": null,
              "description": "The maximum angle to orbit vertically.  This value should be between 0 to Math.PI radians.",
              "name": "maxPolarAngle",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "minPolarAngle": {
              "defaultValue": null,
              "description": "The minimum angle to orbit vertically.  This value should be between 0 to Math.PI radians.",
              "name": "minPolarAngle",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "rotateSpeed": {
              "defaultValue": null,
              "description": "Speed of rotation.",
              "name": "rotateSpeed",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "zoomSpeed": {
              "defaultValue": null,
              "description": "Speed of zoom.",
              "name": "zoomSpeed",
              "required": false,
              "type": {
                "name": "number"
              }
            }
          }
        }
      ]
    },
    {
      "key": "docs/props/components/FocusOptions.tsx",
      "value": [
        {
          "description": "",
          "displayName": "FocusOptions",
          "methods": [],
          "props": {
            "animationDuration": {
              "defaultValue": null,
              "description": "Duration of the focus animation.",
              "name": "animationDuration",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "distanceRadiusScale": {
              "defaultValue": null,
              "description": "Distance (measured as a scale factor to the globe radius) that the focus will be viewed from.",
              "name": "distanceRadiusScale",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "easingFunction": {
              "defaultValue": null,
              "description": "Easing function applied for the animation.",
              "name": "easingFunction",
              "required": false,
              "type": {
                "name": "EasingFunction"
              }
            },
            "enableDefocus": {
              "defaultValue": null,
              "description": "Enable the defocus feature (i.e. clicking the globe after a focus has been applied).",
              "name": "enableDefocus",
              "required": false,
              "type": {
                "name": "boolean"
              }
            }
          }
        }
      ]
    },
    {
      "key": "docs/props/components/GlobeOptions.tsx",
      "value": [
        {
          "description": "",
          "displayName": "GlobeOptions",
          "methods": [],
          "props": {
            "backgroundTexture": {
              "defaultValue": null,
              "description": "Background texture.  Accepts a URL or image data.",
              "name": "backgroundTexture",
              "required": false,
              "type": {
                "name": "string"
              }
            },
            "cloudsOpacity": {
              "defaultValue": null,
              "description": "Opacity of clouds with values from 0 to 1.",
              "name": "cloudsOpacity",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "cloudsSpeed": {
              "defaultValue": null,
              "description": "Speed of clouds.",
              "name": "cloudsSpeed",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "cloudsTexture": {
              "defaultValue": null,
              "description": "Cloud texture.  Accepts a URL or image data.",
              "name": "cloudsTexture",
              "required": false,
              "type": {
                "name": "string"
              }
            },
            "enableBackground": {
              "defaultValue": null,
              "description": "Enable background.  If disabled, the canvas will be transparent, allowing use of custom div backgrounds.",
              "name": "enableBackground",
              "required": false,
              "type": {
                "name": "boolean"
              }
            },
            "enableClouds": {
              "defaultValue": null,
              "description": "Enable clouds.",
              "name": "enableClouds",
              "required": false,
              "type": {
                "name": "boolean"
              }
            },
            "enableGlow": {
              "defaultValue": null,
              "description": "Enable glow effect of the globe.",
              "name": "enableGlow",
              "required": false,
              "type": {
                "name": "boolean"
              }
            },
            "glowCoefficient": {
              "defaultValue": null,
              "description": "Glow coefficient (see http://stemkoski.github.io/Three.js/Shader-Glow.html).",
              "name": "glowCoefficient",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "glowColor": {
              "defaultValue": null,
              "description": "Glow color.",
              "name": "glowColor",
              "required": false,
              "type": {
                "name": "string"
              }
            },
            "glowPower": {
              "defaultValue": null,
              "description": "Glow power (see http://stemkoski.github.io/Three.js/Shader-Glow.html).",
              "name": "glowPower",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "glowRadiusScale": {
              "defaultValue": null,
              "description": "Size of the glow radius (measured as a scale factor to the globe radius).",
              "name": "glowRadiusScale",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "texture": {
              "defaultValue": null,
              "description": "Globe texture.  Accepts a URL or image data.",
              "name": "texture",
              "required": false,
              "type": {
                "name": "string"
              }
            }
          }
        }
      ]
    },
    {
      "key": "docs/props/components/LightOptions.tsx",
      "value": [
        {
          "description": "",
          "displayName": "LightOptions",
          "methods": [],
          "props": {
            "ambientLightColor": {
              "defaultValue": null,
              "description": "Ambient light color.",
              "name": "ambientLightColor",
              "required": false,
              "type": {
                "name": "string"
              }
            },
            "ambientLightIntensity": {
              "defaultValue": null,
              "description": "Ambient light intensity.",
              "name": "ambientLightIntensity",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "pointLightColor": {
              "defaultValue": null,
              "description": "Point light color.",
              "name": "pointLightColor",
              "required": false,
              "type": {
                "name": "string"
              }
            },
            "pointLightIntensity": {
              "defaultValue": null,
              "description": "Point light intensity.",
              "name": "pointLightIntensity",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "pointLightPositionRadiusScales": {
              "defaultValue": null,
              "description": "[x, y, z] position of the point light (measured as scale factors to the globe radius).",
              "name": "pointLightPositionRadiusScales",
              "required": false,
              "type": {
                "name": "[number, number, number]"
              }
            }
          }
        }
      ]
    },
    {
      "key": "docs/props/components/Marker.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Marker",
          "methods": [],
          "props": {
            "color": {
              "defaultValue": null,
              "description": "Color of the marker",
              "name": "color",
              "required": false,
              "type": {
                "name": "string"
              }
            },
            "coordinates": {
              "defaultValue": null,
              "description": "[lat, lon] coordinates of the marker.",
              "name": "coordinates",
              "required": true,
              "type": {
                "name": "[number, number]"
              }
            },
            "value": {
              "defaultValue": null,
              "description": "Numeric value used to determine the size of the marker.",
              "name": "value",
              "required": true,
              "type": {
                "name": "number"
              }
            }
          }
        }
      ]
    },
    {
      "key": "docs/props/components/MarkerOptions.tsx",
      "value": [
        {
          "description": "",
          "displayName": "MarkerOptions",
          "methods": [],
          "props": {
            "activeScale": {
              "defaultValue": null,
              "description": "Scale factor of marker size when active (i.e. hovered).",
              "name": "activeScale",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "animationDuration": {
              "defaultValue": null,
              "description": "Duration of marker animation (in milliseconds).",
              "name": "animationDuration",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "enableGlow": {
              "defaultValue": null,
              "description": "Enable glow effect of the marker.",
              "name": "enableGlow",
              "required": false,
              "type": {
                "name": "boolean"
              }
            },
            "enableTooltip": {
              "defaultValue": null,
              "description": "Enable tooltip features.",
              "name": "enableTooltip",
              "required": false,
              "type": {
                "name": "boolean"
              }
            },
            "getTooltipContent": {
              "defaultValue": null,
              "description": "Callback to set the tooltip string content based on the marker data.",
              "name": "getTooltipContent",
              "required": false,
              "type": {
                "name": "(marker: Marker) => string"
              }
            },
            "glowCoefficient": {
              "defaultValue": null,
              "description": "Glow coefficient (see http://stemkoski.github.io/Three.js/Shader-Glow.html).",
              "name": "glowCoefficient",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "glowPower": {
              "defaultValue": null,
              "description": "Glow power (see http://stemkoski.github.io/Three.js/Shader-Glow.html).",
              "name": "glowPower",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "glowRadiusScale": {
              "defaultValue": null,
              "description": "Size of the glow radius (measured as a scale factor to the globe radius).",
              "name": "glowRadiusScale",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "offsetRadiusScale": {
              "defaultValue": null,
              "description": "Marker position offset from surface of the globe (measured as a scale factor to the globe radius).  If undefined, an automated offset is applied based on the marker type used.",
              "name": "offsetRadiusScale",
              "required": false,
              "type": {
                "name": "number"
              }
            },
            "radiusScaleRange": {
              "defaultValue": null,
              "description": "[min, max] size of markers (measured as scale factors to the globe radius).",
              "name": "radiusScaleRange",
              "required": false,
              "type": {
                "name": "[number, number]"
              }
            },
            "renderer": {
              "defaultValue": null,
              "description": "Custom marker renderer returning a THREE.Object3D object.",
              "name": "renderer",
              "required": false,
              "type": {
                "name": "(marker: Marker) => Object3D"
              }
            },
            "type": {
              "defaultValue": null,
              "description": "If a valid type is passed, ReactGlobe will render the supported markers.",
              "name": "type",
              "required": false,
              "type": {
                "name": "MarkerType"
              }
            }
          }
        }
      ]
    }
  ],
  "entries": [
    {
      "key": "docs/changelog.mdx",
      "value": {
        "name": "CHANGELOG",
        "route": "/changelog",
        "id": "930fff76ecc60a15c61587b3693c8fc1",
        "filepath": "docs/changelog.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/changelog.mdx",
        "slug": "docs-changelog",
        "menu": "",
        "headings": []
      }
    },
    {
      "key": "docs/faq.mdx",
      "value": {
        "name": "FAQ",
        "route": "/faq",
        "id": "141f605d6e4faa6ff97a347752eeac4c",
        "filepath": "docs/faq.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/faq.mdx",
        "slug": "docs-faq",
        "menu": "",
        "headings": [
          {
            "slug": "faq",
            "depth": 1,
            "value": "FAQ"
          }
        ]
      }
    },
    {
      "key": "docs/introduction.mdx",
      "value": {
        "name": "README",
        "route": "/",
        "id": "dcb8d76187bb876677644bdd455b2636",
        "filepath": "docs/introduction.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/introduction.mdx",
        "slug": "docs-introduction",
        "menu": "",
        "headings": []
      }
    },
    {
      "key": "docs/props/component.mdx",
      "value": {
        "name": "Component",
        "route": "/props/component",
        "menu": "Props",
        "id": "a4585ad793289d0a8734d5accd3e4e95",
        "filepath": "docs/props/component.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/props/component.mdx",
        "slug": "docs-props-component",
        "headings": [
          {
            "slug": "component-props",
            "depth": 1,
            "value": "Component Props"
          }
        ]
      }
    },
    {
      "key": "docs/props/types.mdx",
      "value": {
        "name": "Types",
        "route": "/props/types",
        "menu": "Props",
        "id": "b9b8c05da875b3286e68e8563a6a00e9",
        "filepath": "docs/props/types.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/props/types.mdx",
        "slug": "docs-props-types",
        "headings": [
          {
            "slug": "prop-types",
            "depth": 1,
            "value": "Prop Types"
          },
          {
            "slug": "marker",
            "depth": 2,
            "value": "Marker"
          },
          {
            "slug": "easingfunction",
            "depth": 2,
            "value": "EasingFunction"
          },
          {
            "slug": "animation",
            "depth": 2,
            "value": "Animation"
          },
          {
            "slug": "cameraoptions",
            "depth": 2,
            "value": "CameraOptions"
          },
          {
            "slug": "focusoptions",
            "depth": 2,
            "value": "FocusOptions"
          },
          {
            "slug": "globeoptions",
            "depth": 2,
            "value": "GlobeOptions"
          },
          {
            "slug": "lightoptions",
            "depth": 2,
            "value": "LightOptions"
          },
          {
            "slug": "markeroptions",
            "depth": 2,
            "value": "MarkerOptions"
          }
        ]
      }
    },
    {
      "key": "docs/usage/animations.mdx",
      "value": {
        "name": "Animations",
        "route": "/usage/animations",
        "menu": "Usage",
        "id": "c8bae50be87924141890b55eaf5760fb",
        "filepath": "docs/usage/animations.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/usage/animations.mdx",
        "slug": "docs-usage-animations",
        "headings": [
          {
            "slug": "animations",
            "depth": 1,
            "value": "Animations"
          }
        ]
      }
    },
    {
      "key": "docs/usage/camera.mdx",
      "value": {
        "name": "Camera",
        "route": "/usage/camera",
        "menu": "Usage",
        "id": "0470932c2baee03e5b85248b450029ea",
        "filepath": "docs/usage/camera.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/usage/camera.mdx",
        "slug": "docs-usage-camera",
        "headings": [
          {
            "slug": "camera",
            "depth": 1,
            "value": "Camera"
          },
          {
            "slug": "zoom",
            "depth": 2,
            "value": "Zoom"
          },
          {
            "slug": "auto-rotate-and-rotate",
            "depth": 2,
            "value": "Auto-rotate and rotate"
          }
        ]
      }
    },
    {
      "key": "docs/usage/events.mdx",
      "value": {
        "name": "Events",
        "route": "/usage/events",
        "menu": "Usage",
        "id": "c1d4e8abee088cfa4b14655f18ff0a3c",
        "filepath": "docs/usage/events.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/usage/events.mdx",
        "slug": "docs-usage-events",
        "headings": [
          {
            "slug": "events",
            "depth": 1,
            "value": "Events"
          }
        ]
      }
    },
    {
      "key": "docs/usage/focus.mdx",
      "value": {
        "name": "Focus",
        "route": "/usage/focus",
        "menu": "Usage",
        "id": "602f3fb7995a4d3abfaa8a6cf125dda0",
        "filepath": "docs/usage/focus.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/usage/focus.mdx",
        "slug": "docs-usage-focus",
        "headings": [
          {
            "slug": "focus",
            "depth": 1,
            "value": "Focus"
          },
          {
            "slug": "behavior",
            "depth": 2,
            "value": "Behavior"
          },
          {
            "slug": "focusoptions",
            "depth": 2,
            "value": "FocusOptions"
          }
        ]
      }
    },
    {
      "key": "docs/usage/globe.mdx",
      "value": {
        "name": "Globe",
        "route": "/usage/globe",
        "menu": "Usage",
        "id": "64565a8301d42fbc9b63346ca66d98f3",
        "filepath": "docs/usage/globe.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/usage/globe.mdx",
        "slug": "docs-usage-globe",
        "headings": [
          {
            "slug": "globe",
            "depth": 1,
            "value": "Globe"
          },
          {
            "slug": "simple",
            "depth": 2,
            "value": "Simple"
          },
          {
            "slug": "size",
            "depth": 2,
            "value": "Size"
          },
          {
            "slug": "background",
            "depth": 2,
            "value": "Background"
          },
          {
            "slug": "clouds",
            "depth": 2,
            "value": "Clouds"
          },
          {
            "slug": "glow",
            "depth": 2,
            "value": "Glow"
          }
        ]
      }
    },
    {
      "key": "docs/usage/lights.mdx",
      "value": {
        "name": "Lights",
        "route": "/usage/lights",
        "menu": "Usage",
        "id": "b22fe8bd30ca4c6bd23697b49d546e2a",
        "filepath": "docs/usage/lights.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/usage/lights.mdx",
        "slug": "docs-usage-lights",
        "headings": [
          {
            "slug": "lights",
            "depth": 1,
            "value": "Lights"
          },
          {
            "slug": "ambient-light",
            "depth": 2,
            "value": "Ambient Light"
          },
          {
            "slug": "point-light",
            "depth": 2,
            "value": "Point Light"
          }
        ]
      }
    },
    {
      "key": "docs/usage/markers.mdx",
      "value": {
        "name": "Markers",
        "route": "/usage/markers",
        "menu": "Usage",
        "id": "151011ca79ea98c2a7de06b1ab48b6c4",
        "filepath": "docs/usage/markers.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/usage/markers.mdx",
        "slug": "docs-usage-markers",
        "headings": [
          {
            "slug": "markers",
            "depth": 1,
            "value": "Markers"
          },
          {
            "slug": "pointbar-markers",
            "depth": 2,
            "value": "Point/Bar Markers"
          },
          {
            "slug": "marker-options-and-tooltips",
            "depth": 2,
            "value": "Marker Options and Tooltips"
          },
          {
            "slug": "custom-renderer",
            "depth": 2,
            "value": "Custom Renderer"
          }
        ]
      }
    },
    {
      "key": "docs/usage/textures.mdx",
      "value": {
        "name": "Textures",
        "route": "/usage/textures",
        "menu": "Usage",
        "id": "597c4e43016ab00fffda8e98ac1f34a8",
        "filepath": "docs/usage/textures.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/usage/textures.mdx",
        "slug": "docs-usage-textures",
        "headings": [
          {
            "slug": "textures",
            "depth": 1,
            "value": "Textures"
          }
        ]
      }
    },
    {
      "key": "docs/gallery/contributing.mdx",
      "value": {
        "name": "Contributing",
        "route": "/gallery/contributing",
        "menu": "Gallery",
        "id": "9a12e8484a80aad8b34c63eb3db4a619",
        "filepath": "docs/gallery/contributing.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/gallery/contributing.mdx",
        "slug": "docs-gallery-contributing",
        "headings": [
          {
            "slug": "contributing",
            "depth": 1,
            "value": "Contributing"
          }
        ]
      }
    },
    {
      "key": "docs/gallery/google-globe-trends.mdx",
      "value": {
        "name": "Google Globe Trends",
        "route": "/gallery/google-globe-trends",
        "menu": "Gallery",
        "id": "429de3bf6987e845f302d7d4bbde65f9",
        "filepath": "docs/gallery/google-globe-trends.mdx",
        "link": "https://github.com/chrisrzhou/react-globe/edit/master/docs/gallery/google-globe-trends.mdx",
        "slug": "docs-gallery-google-globe-trends",
        "headings": [
          {
            "slug": "google-globe-trends",
            "depth": 1,
            "value": "Google Globe Trends"
          }
        ]
      }
    }
  ]
}
